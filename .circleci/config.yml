version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          sudo pip install awscli
      # build and push Docker image
      - run: |
          TAG=0.1.$CIRCLE_BUILD_NUM
          docker build -t $CIRCLE_PROJECT_REPONAME .
      - deploy:
          name: Push application Docker image
          command: |

            CLUSTER="$CIRCLE_PROJECT_REPONAME-app"
            FAMILY="$CIRCLE_PROJECT_REPONAME-app"
            DOCKER_IMAGE=$CIRCLE_PROJECT_REPONAME
            TASK="$CIRCLE_PROJECT_REPONAME"
            SERVICE="$CIRCLE_PROJECT_REPONAME-service"

            eval "$(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)"
            docker tag $CIRCLE_PROJECT_REPONAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CIRCLE_PROJECT_REPONAME:latest
            docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CIRCLE_PROJECT_REPONAME:latest

            # create task for docker deploy
            # "memoryReservation": 800,
            # "portMappings": [
            #   {
            #     "containerPort": 3000,
            #     "hostPort": 80
            #   }
            # ],

            task_template='[
              {
                "name": "%s",
                "image": "%s.dkr.ecr.%s.amazonaws.com/%s:latest",
                "essential": true,
                "environment" : [
                    { "name" : "TOKEN_BOT", "value" : "%s" }
                ]
              }
            ]'

            echo "$task_template"

            task_def=$(printf "$task_template" $TASK $AWS_ACCOUNT_ID $AWS_DEFAULT_REGION $DOCKER_IMAGE $TOKEN_BOT)

            # Register task definition
            json=$(aws ecs register-task-definition --container-definitions "$task_def" --family "$FAMILY")

            # Grab revision # using regular bash and grep
            revision=$(echo "$json" | grep -o '"revision": [0-9]*' | grep -Eo '[0-9]+')

            # Deploy revision
            aws ecs update-service --cluster "$CLUSTER" --service "$SERVICE" --task-definition "$TASK":"$revision"
            return 0
